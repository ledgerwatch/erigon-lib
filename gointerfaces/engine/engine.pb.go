// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.3
// source: engine/engine.proto

package engine

import (
	types "github.com/ledgerwatch/erigon-lib/gointerfaces/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EngineStatus int32

const (
	EngineStatus_VALID              EngineStatus = 0
	EngineStatus_INVALID            EngineStatus = 1
	EngineStatus_SYNCING            EngineStatus = 2
	EngineStatus_ACCEPTED           EngineStatus = 3
	EngineStatus_INVALID_BLOCK_HASH EngineStatus = 4
)

// Enum value maps for EngineStatus.
var (
	EngineStatus_name = map[int32]string{
		0: "VALID",
		1: "INVALID",
		2: "SYNCING",
		3: "ACCEPTED",
		4: "INVALID_BLOCK_HASH",
	}
	EngineStatus_value = map[string]int32{
		"VALID":              0,
		"INVALID":            1,
		"SYNCING":            2,
		"ACCEPTED":           3,
		"INVALID_BLOCK_HASH": 4,
	}
)

func (x EngineStatus) Enum() *EngineStatus {
	p := new(EngineStatus)
	*p = x
	return p
}

func (x EngineStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EngineStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_engine_engine_proto_enumTypes[0].Descriptor()
}

func (EngineStatus) Type() protoreflect.EnumType {
	return &file_engine_engine_proto_enumTypes[0]
}

func (x EngineStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EngineStatus.Descriptor instead.
func (EngineStatus) EnumDescriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{0}
}

type EngineGetPayloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadId uint64 `protobuf:"varint,1,opt,name=payload_id,json=payloadId,proto3" json:"payload_id,omitempty"`
}

func (x *EngineGetPayloadRequest) Reset() {
	*x = EngineGetPayloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineGetPayloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineGetPayloadRequest) ProtoMessage() {}

func (x *EngineGetPayloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineGetPayloadRequest.ProtoReflect.Descriptor instead.
func (*EngineGetPayloadRequest) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{0}
}

func (x *EngineGetPayloadRequest) GetPayloadId() uint64 {
	if x != nil {
		return x.PayloadId
	}
	return 0
}

type EngineGetBlobsBundleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadId uint64 `protobuf:"varint,1,opt,name=payload_id,json=payloadId,proto3" json:"payload_id,omitempty"`
}

func (x *EngineGetBlobsBundleRequest) Reset() {
	*x = EngineGetBlobsBundleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineGetBlobsBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineGetBlobsBundleRequest) ProtoMessage() {}

func (x *EngineGetBlobsBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineGetBlobsBundleRequest.ProtoReflect.Descriptor instead.
func (*EngineGetBlobsBundleRequest) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{1}
}

func (x *EngineGetBlobsBundleRequest) GetPayloadId() uint64 {
	if x != nil {
		return x.PayloadId
	}
	return 0
}

type EnginePayloadStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          EngineStatus `protobuf:"varint,1,opt,name=status,proto3,enum=engine.EngineStatus" json:"status,omitempty"`
	LatestValidHash *types.H256  `protobuf:"bytes,2,opt,name=latest_valid_hash,json=latestValidHash,proto3" json:"latest_valid_hash,omitempty"`
	ValidationError string       `protobuf:"bytes,3,opt,name=validation_error,json=validationError,proto3" json:"validation_error,omitempty"`
}

func (x *EnginePayloadStatus) Reset() {
	*x = EnginePayloadStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnginePayloadStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnginePayloadStatus) ProtoMessage() {}

func (x *EnginePayloadStatus) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnginePayloadStatus.ProtoReflect.Descriptor instead.
func (*EnginePayloadStatus) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{2}
}

func (x *EnginePayloadStatus) GetStatus() EngineStatus {
	if x != nil {
		return x.Status
	}
	return EngineStatus_VALID
}

func (x *EnginePayloadStatus) GetLatestValidHash() *types.H256 {
	if x != nil {
		return x.LatestValidHash
	}
	return nil
}

func (x *EnginePayloadStatus) GetValidationError() string {
	if x != nil {
		return x.ValidationError
	}
	return ""
}

type EnginePayloadAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version               uint32              `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"` // v1 - no withdrawals, v2 - with withdrawals
	Timestamp             uint64              `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PrevRandao            *types.H256         `protobuf:"bytes,3,opt,name=prev_randao,json=prevRandao,proto3" json:"prev_randao,omitempty"`
	SuggestedFeeRecipient *types.H160         `protobuf:"bytes,4,opt,name=suggested_fee_recipient,json=suggestedFeeRecipient,proto3" json:"suggested_fee_recipient,omitempty"`
	Withdrawals           []*types.Withdrawal `protobuf:"bytes,5,rep,name=withdrawals,proto3" json:"withdrawals,omitempty"`
}

func (x *EnginePayloadAttributes) Reset() {
	*x = EnginePayloadAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnginePayloadAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnginePayloadAttributes) ProtoMessage() {}

func (x *EnginePayloadAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnginePayloadAttributes.ProtoReflect.Descriptor instead.
func (*EnginePayloadAttributes) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{3}
}

func (x *EnginePayloadAttributes) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *EnginePayloadAttributes) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *EnginePayloadAttributes) GetPrevRandao() *types.H256 {
	if x != nil {
		return x.PrevRandao
	}
	return nil
}

func (x *EnginePayloadAttributes) GetSuggestedFeeRecipient() *types.H160 {
	if x != nil {
		return x.SuggestedFeeRecipient
	}
	return nil
}

func (x *EnginePayloadAttributes) GetWithdrawals() []*types.Withdrawal {
	if x != nil {
		return x.Withdrawals
	}
	return nil
}

type EngineForkChoiceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeadBlockHash      *types.H256 `protobuf:"bytes,1,opt,name=head_block_hash,json=headBlockHash,proto3" json:"head_block_hash,omitempty"`
	SafeBlockHash      *types.H256 `protobuf:"bytes,2,opt,name=safe_block_hash,json=safeBlockHash,proto3" json:"safe_block_hash,omitempty"`
	FinalizedBlockHash *types.H256 `protobuf:"bytes,3,opt,name=finalized_block_hash,json=finalizedBlockHash,proto3" json:"finalized_block_hash,omitempty"`
}

func (x *EngineForkChoiceState) Reset() {
	*x = EngineForkChoiceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineForkChoiceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineForkChoiceState) ProtoMessage() {}

func (x *EngineForkChoiceState) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineForkChoiceState.ProtoReflect.Descriptor instead.
func (*EngineForkChoiceState) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{4}
}

func (x *EngineForkChoiceState) GetHeadBlockHash() *types.H256 {
	if x != nil {
		return x.HeadBlockHash
	}
	return nil
}

func (x *EngineForkChoiceState) GetSafeBlockHash() *types.H256 {
	if x != nil {
		return x.SafeBlockHash
	}
	return nil
}

func (x *EngineForkChoiceState) GetFinalizedBlockHash() *types.H256 {
	if x != nil {
		return x.FinalizedBlockHash
	}
	return nil
}

type EngineForkChoiceUpdatedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForkchoiceState   *EngineForkChoiceState   `protobuf:"bytes,1,opt,name=forkchoice_state,json=forkchoiceState,proto3" json:"forkchoice_state,omitempty"`
	PayloadAttributes *EnginePayloadAttributes `protobuf:"bytes,2,opt,name=payload_attributes,json=payloadAttributes,proto3" json:"payload_attributes,omitempty"`
}

func (x *EngineForkChoiceUpdatedRequest) Reset() {
	*x = EngineForkChoiceUpdatedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineForkChoiceUpdatedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineForkChoiceUpdatedRequest) ProtoMessage() {}

func (x *EngineForkChoiceUpdatedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineForkChoiceUpdatedRequest.ProtoReflect.Descriptor instead.
func (*EngineForkChoiceUpdatedRequest) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{5}
}

func (x *EngineForkChoiceUpdatedRequest) GetForkchoiceState() *EngineForkChoiceState {
	if x != nil {
		return x.ForkchoiceState
	}
	return nil
}

func (x *EngineForkChoiceUpdatedRequest) GetPayloadAttributes() *EnginePayloadAttributes {
	if x != nil {
		return x.PayloadAttributes
	}
	return nil
}

type EngineForkChoiceUpdatedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadStatus *EnginePayloadStatus `protobuf:"bytes,1,opt,name=payload_status,json=payloadStatus,proto3" json:"payload_status,omitempty"`
	PayloadId     uint64               `protobuf:"varint,2,opt,name=payload_id,json=payloadId,proto3" json:"payload_id,omitempty"`
}

func (x *EngineForkChoiceUpdatedResponse) Reset() {
	*x = EngineForkChoiceUpdatedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineForkChoiceUpdatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineForkChoiceUpdatedResponse) ProtoMessage() {}

func (x *EngineForkChoiceUpdatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineForkChoiceUpdatedResponse.ProtoReflect.Descriptor instead.
func (*EngineForkChoiceUpdatedResponse) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{6}
}

func (x *EngineForkChoiceUpdatedResponse) GetPayloadStatus() *EnginePayloadStatus {
	if x != nil {
		return x.PayloadStatus
	}
	return nil
}

func (x *EngineForkChoiceUpdatedResponse) GetPayloadId() uint64 {
	if x != nil {
		return x.PayloadId
	}
	return 0
}

type EngineGetPayloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionPayload *types.ExecutionPayload `protobuf:"bytes,1,opt,name=execution_payload,json=executionPayload,proto3" json:"execution_payload,omitempty"`
	BlockValue       *types.H256             `protobuf:"bytes,2,opt,name=block_value,json=blockValue,proto3" json:"block_value,omitempty"`
	BlobsBundle      *types.BlobsBundleV1    `protobuf:"bytes,3,opt,name=blobs_bundle,json=blobsBundle,proto3" json:"blobs_bundle,omitempty"`
}

func (x *EngineGetPayloadResponse) Reset() {
	*x = EngineGetPayloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineGetPayloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineGetPayloadResponse) ProtoMessage() {}

func (x *EngineGetPayloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineGetPayloadResponse.ProtoReflect.Descriptor instead.
func (*EngineGetPayloadResponse) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{7}
}

func (x *EngineGetPayloadResponse) GetExecutionPayload() *types.ExecutionPayload {
	if x != nil {
		return x.ExecutionPayload
	}
	return nil
}

func (x *EngineGetPayloadResponse) GetBlockValue() *types.H256 {
	if x != nil {
		return x.BlockValue
	}
	return nil
}

func (x *EngineGetPayloadResponse) GetBlobsBundle() *types.BlobsBundleV1 {
	if x != nil {
		return x.BlobsBundle
	}
	return nil
}

type EngineGetPayloadBodiesByHashV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hashes []*types.H256 `protobuf:"bytes,1,rep,name=hashes,proto3" json:"hashes,omitempty"`
}

func (x *EngineGetPayloadBodiesByHashV1Request) Reset() {
	*x = EngineGetPayloadBodiesByHashV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineGetPayloadBodiesByHashV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineGetPayloadBodiesByHashV1Request) ProtoMessage() {}

func (x *EngineGetPayloadBodiesByHashV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineGetPayloadBodiesByHashV1Request.ProtoReflect.Descriptor instead.
func (*EngineGetPayloadBodiesByHashV1Request) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{8}
}

func (x *EngineGetPayloadBodiesByHashV1Request) GetHashes() []*types.H256 {
	if x != nil {
		return x.Hashes
	}
	return nil
}

type EngineGetPayloadBodiesByRangeV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Count uint64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *EngineGetPayloadBodiesByRangeV1Request) Reset() {
	*x = EngineGetPayloadBodiesByRangeV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineGetPayloadBodiesByRangeV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineGetPayloadBodiesByRangeV1Request) ProtoMessage() {}

func (x *EngineGetPayloadBodiesByRangeV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineGetPayloadBodiesByRangeV1Request.ProtoReflect.Descriptor instead.
func (*EngineGetPayloadBodiesByRangeV1Request) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{9}
}

func (x *EngineGetPayloadBodiesByRangeV1Request) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *EngineGetPayloadBodiesByRangeV1Request) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type EngineGetPayloadBodiesV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bodies []*types.ExecutionPayloadBodyV1 `protobuf:"bytes,1,rep,name=bodies,proto3" json:"bodies,omitempty"`
}

func (x *EngineGetPayloadBodiesV1Response) Reset() {
	*x = EngineGetPayloadBodiesV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_engine_engine_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineGetPayloadBodiesV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineGetPayloadBodiesV1Response) ProtoMessage() {}

func (x *EngineGetPayloadBodiesV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_engine_engine_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineGetPayloadBodiesV1Response.ProtoReflect.Descriptor instead.
func (*EngineGetPayloadBodiesV1Response) Descriptor() ([]byte, []int) {
	return file_engine_engine_proto_rawDescGZIP(), []int{10}
}

func (x *EngineGetPayloadBodiesV1Response) GetBodies() []*types.ExecutionPayloadBodyV1 {
	if x != nil {
		return x.Bodies
	}
	return nil
}

var File_engine_engine_proto protoreflect.FileDescriptor

var file_engine_engine_proto_rawDesc = []byte{
	0x0a, 0x13, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x1a, 0x11, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a,
	0x17, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x1b, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x13, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x11, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x48,
	0x32, 0x35, 0x36, 0x52, 0x0f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0xf9, 0x01, 0x0a, 0x17, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x72, 0x61, 0x6e, 0x64,
	0x61, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x52, 0x61, 0x6e, 0x64, 0x61,
	0x6f, 0x12, 0x43, 0x0a, 0x17, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x66,
	0x65, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x31, 0x36, 0x30, 0x52,
	0x15, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x46, 0x65, 0x65, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x0b,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x15,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x0f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x0d, 0x68, 0x65, 0x61,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x33, 0x0a, 0x0f, 0x73, 0x61,
	0x66, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x32, 0x35, 0x36,
	0x52, 0x0d, 0x73, 0x61, 0x66, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x3d, 0x0a, 0x14, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x12, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x22, 0xba,
	0x01, 0x0a, 0x1e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x48, 0x0a, 0x10, 0x66, 0x6f, 0x72, 0x6b, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x6b, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x6b,
	0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4e, 0x0a, 0x12, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x11, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x1f,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x18, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x5f, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x31, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x4c, 0x0a, 0x25,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x56, 0x31, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x32,
	0x35, 0x36, 0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x26, 0x45, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6f,
	0x64, 0x69, 0x65, 0x73, 0x42, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x59, 0x0a, 0x20, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x62, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6f, 0x64,
	0x79, 0x56, 0x31, 0x52, 0x06, 0x62, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x2a, 0x59, 0x0a, 0x0c, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x59, 0x4e, 0x43, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x16,
	0x0a, 0x12, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f,
	0x48, 0x41, 0x53, 0x48, 0x10, 0x04, 0x32, 0xe2, 0x04, 0x0a, 0x06, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x12, 0x48, 0x0a, 0x10, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x17, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x1b,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6a, 0x0a, 0x17, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x26, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x46, 0x6f,
	0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1f, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79,
	0x0a, 0x1e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x56, 0x31,
	0x12, 0x2d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73,
	0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x56,
	0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x1f, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6f, 0x64,
	0x69, 0x65, 0x73, 0x42, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x31, 0x12, 0x2e, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x42, 0x79, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6f, 0x64, 0x69, 0x65, 0x73, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x16, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x31,
	0x12, 0x23, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x6c,
	0x6f, 0x62, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x31, 0x42, 0x11, 0x5a, 0x0f, 0x2e,
	0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x3b, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_engine_engine_proto_rawDescOnce sync.Once
	file_engine_engine_proto_rawDescData = file_engine_engine_proto_rawDesc
)

func file_engine_engine_proto_rawDescGZIP() []byte {
	file_engine_engine_proto_rawDescOnce.Do(func() {
		file_engine_engine_proto_rawDescData = protoimpl.X.CompressGZIP(file_engine_engine_proto_rawDescData)
	})
	return file_engine_engine_proto_rawDescData
}

var file_engine_engine_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_engine_engine_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_engine_engine_proto_goTypes = []interface{}{
	(EngineStatus)(0),                              // 0: engine.EngineStatus
	(*EngineGetPayloadRequest)(nil),                // 1: engine.EngineGetPayloadRequest
	(*EngineGetBlobsBundleRequest)(nil),            // 2: engine.EngineGetBlobsBundleRequest
	(*EnginePayloadStatus)(nil),                    // 3: engine.EnginePayloadStatus
	(*EnginePayloadAttributes)(nil),                // 4: engine.EnginePayloadAttributes
	(*EngineForkChoiceState)(nil),                  // 5: engine.EngineForkChoiceState
	(*EngineForkChoiceUpdatedRequest)(nil),         // 6: engine.EngineForkChoiceUpdatedRequest
	(*EngineForkChoiceUpdatedResponse)(nil),        // 7: engine.EngineForkChoiceUpdatedResponse
	(*EngineGetPayloadResponse)(nil),               // 8: engine.EngineGetPayloadResponse
	(*EngineGetPayloadBodiesByHashV1Request)(nil),  // 9: engine.EngineGetPayloadBodiesByHashV1Request
	(*EngineGetPayloadBodiesByRangeV1Request)(nil), // 10: engine.EngineGetPayloadBodiesByRangeV1Request
	(*EngineGetPayloadBodiesV1Response)(nil),       // 11: engine.EngineGetPayloadBodiesV1Response
	(*types.H256)(nil),                             // 12: types.H256
	(*types.H160)(nil),                             // 13: types.H160
	(*types.Withdrawal)(nil),                       // 14: types.Withdrawal
	(*types.ExecutionPayload)(nil),                 // 15: types.ExecutionPayload
	(*types.BlobsBundleV1)(nil),                    // 16: types.BlobsBundleV1
	(*types.ExecutionPayloadBodyV1)(nil),           // 17: types.ExecutionPayloadBodyV1
}
var file_engine_engine_proto_depIdxs = []int32{
	0,  // 0: engine.EnginePayloadStatus.status:type_name -> engine.EngineStatus
	12, // 1: engine.EnginePayloadStatus.latest_valid_hash:type_name -> types.H256
	12, // 2: engine.EnginePayloadAttributes.prev_randao:type_name -> types.H256
	13, // 3: engine.EnginePayloadAttributes.suggested_fee_recipient:type_name -> types.H160
	14, // 4: engine.EnginePayloadAttributes.withdrawals:type_name -> types.Withdrawal
	12, // 5: engine.EngineForkChoiceState.head_block_hash:type_name -> types.H256
	12, // 6: engine.EngineForkChoiceState.safe_block_hash:type_name -> types.H256
	12, // 7: engine.EngineForkChoiceState.finalized_block_hash:type_name -> types.H256
	5,  // 8: engine.EngineForkChoiceUpdatedRequest.forkchoice_state:type_name -> engine.EngineForkChoiceState
	4,  // 9: engine.EngineForkChoiceUpdatedRequest.payload_attributes:type_name -> engine.EnginePayloadAttributes
	3,  // 10: engine.EngineForkChoiceUpdatedResponse.payload_status:type_name -> engine.EnginePayloadStatus
	15, // 11: engine.EngineGetPayloadResponse.execution_payload:type_name -> types.ExecutionPayload
	12, // 12: engine.EngineGetPayloadResponse.block_value:type_name -> types.H256
	16, // 13: engine.EngineGetPayloadResponse.blobs_bundle:type_name -> types.BlobsBundleV1
	12, // 14: engine.EngineGetPayloadBodiesByHashV1Request.hashes:type_name -> types.H256
	17, // 15: engine.EngineGetPayloadBodiesV1Response.bodies:type_name -> types.ExecutionPayloadBodyV1
	15, // 16: engine.Engine.EngineNewPayload:input_type -> types.ExecutionPayload
	6,  // 17: engine.Engine.EngineForkChoiceUpdated:input_type -> engine.EngineForkChoiceUpdatedRequest
	1,  // 18: engine.Engine.EngineGetPayload:input_type -> engine.EngineGetPayloadRequest
	9,  // 19: engine.Engine.EngineGetPayloadBodiesByHashV1:input_type -> engine.EngineGetPayloadBodiesByHashV1Request
	10, // 20: engine.Engine.EngineGetPayloadBodiesByRangeV1:input_type -> engine.EngineGetPayloadBodiesByRangeV1Request
	2,  // 21: engine.Engine.EngineGetBlobsBundleV1:input_type -> engine.EngineGetBlobsBundleRequest
	3,  // 22: engine.Engine.EngineNewPayload:output_type -> engine.EnginePayloadStatus
	7,  // 23: engine.Engine.EngineForkChoiceUpdated:output_type -> engine.EngineForkChoiceUpdatedResponse
	8,  // 24: engine.Engine.EngineGetPayload:output_type -> engine.EngineGetPayloadResponse
	11, // 25: engine.Engine.EngineGetPayloadBodiesByHashV1:output_type -> engine.EngineGetPayloadBodiesV1Response
	11, // 26: engine.Engine.EngineGetPayloadBodiesByRangeV1:output_type -> engine.EngineGetPayloadBodiesV1Response
	16, // 27: engine.Engine.EngineGetBlobsBundleV1:output_type -> types.BlobsBundleV1
	22, // [22:28] is the sub-list for method output_type
	16, // [16:22] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_engine_engine_proto_init() }
func file_engine_engine_proto_init() {
	if File_engine_engine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_engine_engine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngineGetPayloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngineGetBlobsBundleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnginePayloadStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnginePayloadAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngineForkChoiceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngineForkChoiceUpdatedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngineForkChoiceUpdatedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngineGetPayloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngineGetPayloadBodiesByHashV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngineGetPayloadBodiesByRangeV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_engine_engine_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngineGetPayloadBodiesV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_engine_engine_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_engine_engine_proto_goTypes,
		DependencyIndexes: file_engine_engine_proto_depIdxs,
		EnumInfos:         file_engine_engine_proto_enumTypes,
		MessageInfos:      file_engine_engine_proto_msgTypes,
	}.Build()
	File_engine_engine_proto = out.File
	file_engine_engine_proto_rawDesc = nil
	file_engine_engine_proto_goTypes = nil
	file_engine_engine_proto_depIdxs = nil
}
